name: fullstack-prac-backend

services:
    db:
        container_name: db-container
        image: postgres

        environment:
            POSTGRES_DB: ${POSTGRES_NAME}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_NAME}",
                ]
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - ./postgres_data:/var/lib/postgresql/data
    api:
        container_name: api-container
        build:
            context: .
            dockerfile: docker/docker_files/Dockerfile
        container_name: test-app-docker-api-container
        restart: unless-stopped
        # restart: on-failure
        # command: python manage.py runserver 0.0.0.0:8080
        command: gunicorn MyTestSite.wsgi:application --bind 0.0.0.0:8080 --workers 3
        ports:
            - "8080:8080"
        volumes:
            - .:/app
        depends_on:
            db:
                condition: service_healthy
        environment:
            POSTGRES_DATABASE_NAME: ${POSTGRES_NAME}
            POSTGRES_DATABASE_USER: ${POSTGRES_USER}
            POSTGRES_DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DATABASE_PORT: ${POSTGRES_PORT}
